#include <bits/stdc++.h>
using namespace std;

long long solve(vector<int> V, int S, int E)
{
    int N = V.size();
    vector<long long> X(N + 1, LLONG_MAX / 2), Y(N + 1, LLONG_MAX / 2), Z(N + 1, LLONG_MAX / 2);
    X[0] = Y[0] = Z[0] = 0;
    for (int i = 0; i < N; i++)
    {
        X[i + 1] = X[i] + (V[i] == 0 ? 0 : E);
        Y[i + 1] = min(X[i + 1], Y[i] + (V[i] == 1 ? 0 : S));
        Z[i + 1] = min(Y[i + 1], Z[i] + (V[i] == 0 ? 0 : E));
    }
    return Z[N];
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int T;
    cin >> T;
    for (int t = 1; t <= T; ++t)
    {
        cout << "Case #" << t << '\n';
        int N, S, E;
        cin >> N >> S >> E;
        vector<int> V(N);
        for (int &v : V)
            cin >> v;
        cout << solve(V, S, E) << endl;
    }
}
